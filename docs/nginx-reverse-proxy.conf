# Nginx Reverse Proxy Configuration for Wazuh MCP Server
# Example configurations for different deployment scenarios

# =================================================================
# Scenario 1: Domain without port (wazuh.company.com)
# =================================================================
server {
    listen 80;
    listen 443 ssl http2;
    server_name wazuh.company.com;
    
    # SSL configuration (replace with your certificates)
    ssl_certificate /path/to/ssl/cert.pem;
    ssl_certificate_key /path/to/ssl/key.pem;
    
    # Redirect HTTP to HTTPS
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
    
    # Proxy to Wazuh MCP Server
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Important for SSE (Server-Sent Events)
        proxy_buffering off;
        proxy_cache off;
        proxy_read_timeout 24h;
        proxy_send_timeout 24h;
    }
}

# =================================================================
# Scenario 2: IP with custom path (192.168.1.100/wazuhsse)
# =================================================================
server {
    listen 80;
    listen 443 ssl http2;
    server_name 192.168.1.100;
    
    # SSL configuration
    ssl_certificate /path/to/ssl/cert.pem;
    ssl_certificate_key /path/to/ssl/key.pem;
    
    # Wazuh MCP Server on custom path
    location /wazuhsse {
        # Remove the path prefix before forwarding
        rewrite ^/wazuhsse(/.*)$ $1 break;
        
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Prefix /wazuhsse;
        proxy_cache_bypass $http_upgrade;
        
        # Important for SSE
        proxy_buffering off;
        proxy_cache off;
        proxy_read_timeout 24h;
        proxy_send_timeout 24h;
    }
    
    # Health check without path rewriting
    location /wazuhsse/health {
        proxy_pass http://localhost:3000/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# =================================================================
# Scenario 3: Subdomain with path (mcp.company.com/api/wazuh)
# =================================================================
server {
    listen 80;
    listen 443 ssl http2;
    server_name mcp.company.com;
    
    # SSL configuration
    ssl_certificate /path/to/ssl/cert.pem;
    ssl_certificate_key /path/to/ssl/key.pem;
    
    # Redirect HTTP to HTTPS
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
    
    # Wazuh MCP Server on API path
    location /api/wazuh {
        rewrite ^/api/wazuh(/.*)$ $1 break;
        
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Prefix /api/wazuh;
        proxy_cache_bypass $http_upgrade;
        
        # SSE configuration
        proxy_buffering off;
        proxy_cache off;
        proxy_read_timeout 24h;
        proxy_send_timeout 24h;
    }
}

# =================================================================
# Docker Compose Integration
# =================================================================
# If running Nginx in Docker alongside the MCP server:

# version: '3.8'
# services:
#   wazuh-mcp-server:
#     build: .
#     container_name: wazuh-mcp-server
#     environment:
#       - MCP_PUBLIC_URL=https://wazuh.company.com
#       - MCP_BASE_PATH=/
#     networks:
#       - mcp-network
#   
#   nginx:
#     image: nginx:alpine
#     container_name: nginx-proxy
#     ports:
#       - "80:80"
#       - "443:443"
#     volumes:
#       - ./nginx.conf:/etc/nginx/conf.d/default.conf
#       - ./ssl:/etc/ssl/certs
#     depends_on:
#       - wazuh-mcp-server
#     networks:
#       - mcp-network
# 
# networks:
#   mcp-network:
#     driver: bridge

# =================================================================
# Environment Variables for Different Scenarios
# =================================================================

# Scenario 1 - Domain without port:
# MCP_PUBLIC_URL=https://wazuh.company.com
# MCP_BASE_PATH=

# Scenario 2 - IP with custom path:
# MCP_PUBLIC_URL=https://192.168.1.100/wazuhsse
# MCP_BASE_PATH=/wazuhsse

# Scenario 3 - Subdomain with API path:
# MCP_PUBLIC_URL=https://mcp.company.com/api/wazuh
# MCP_BASE_PATH=/api/wazuh

# =================================================================
# Testing Your Configuration
# =================================================================

# 1. Test the reverse proxy:
# curl https://wazuh.company.com/health
# curl https://192.168.1.100/wazuhsse/health
# curl https://mcp.company.com/api/wazuh/health

# 2. Test Claude Desktop Custom Connector:
# Server URL: https://wazuh.company.com
# Server URL: https://192.168.1.100/wazuhsse
# Server URL: https://mcp.company.com/api/wazuh

# 3. Test SSE endpoint:
# curl -H "Authorization: Bearer your_token" https://wazuh.company.com/sse