#!/bin/bash
# Simple Wazuh MCP Server Configuration Script
# Run this after deploying Docker to configure your Wazuh connection

set -e

echo "üõ°Ô∏è  Wazuh MCP Server Configuration"
echo "=================================="
echo

# Check if Docker is running
if ! docker info >/dev/null 2>&1; then
    echo "‚ùå Error: Docker is not running. Please start Docker first."
    exit 1
fi

# Check if compose.yml exists
if [ ! -f "compose.yml" ]; then
    echo "‚ùå Error: compose.yml not found. Please run this script from the project root directory."
    exit 1
fi

echo "This script will help you configure your Wazuh connection settings."
echo "You'll need your Wazuh Manager details to proceed."
echo

# Collect Wazuh settings
read -p "Enter your Wazuh Manager hostname or IP: " WAZUH_HOST
while [[ -z "$WAZUH_HOST" ]]; do
    echo "‚ùå Wazuh hostname cannot be empty."
    read -p "Enter your Wazuh Manager hostname or IP: " WAZUH_HOST
done

read -p "Enter your Wazuh API username: " WAZUH_USER
while [[ -z "$WAZUH_USER" ]]; do
    echo "‚ùå Wazuh username cannot be empty."
    read -p "Enter your Wazuh API username: " WAZUH_USER
done

read -s -p "Enter your Wazuh API password: " WAZUH_PASS
echo
while [[ -z "$WAZUH_PASS" ]]; do
    echo "‚ùå Wazuh password cannot be empty."
    read -s -p "Enter your Wazuh API password: " WAZUH_PASS
    echo
done

# Optional settings
echo
echo "üìã Optional Settings (press Enter to use defaults):"
read -p "Wazuh API port [55000]: " WAZUH_PORT
WAZUH_PORT=${WAZUH_PORT:-55000}

read -p "MCP Server port [3000]: " MCP_PORT
MCP_PORT=${MCP_PORT:-3000}

read -p "Enable SSL verification? [y/N]: " VERIFY_SSL_INPUT
if [[ "$VERIFY_SSL_INPUT" =~ ^[Yy]$ ]]; then
    VERIFY_SSL="true"
else
    VERIFY_SSL="false"
fi

echo
echo "üîß Configuration Summary:"
echo "========================"
echo "Wazuh Host: $WAZUH_HOST"
echo "Wazuh User: $WAZUH_USER"
echo "Wazuh Port: $WAZUH_PORT"
echo "MCP Port: $MCP_PORT"
echo "SSL Verification: $VERIFY_SSL"
echo

read -p "Proceed with this configuration? [Y/n]: " CONFIRM
if [[ "$CONFIRM" =~ ^[Nn]$ ]]; then
    echo "‚ùå Configuration cancelled."
    exit 0
fi

# Create environment file for Docker Compose
echo "üìù Creating configuration file..."
cat > .env.wazuh <<EOF
# Wazuh MCP Server Configuration
# Generated by configure-wazuh.sh on $(date)

# === REQUIRED WAZUH SETTINGS ===
WAZUH_HOST=$WAZUH_HOST
WAZUH_USER=$WAZUH_USER
WAZUH_PASS=$WAZUH_PASS
WAZUH_PORT=$WAZUH_PORT

# === MCP SERVER SETTINGS ===
MCP_TRANSPORT=http
MCP_HOST=0.0.0.0
MCP_PORT=$MCP_PORT

# === SECURITY SETTINGS ===
VERIFY_SSL=$VERIFY_SSL

# === CONTAINER SETTINGS ===
ENVIRONMENT=production
PYTHONUNBUFFERED=1
STRUCTURED_LOGGING=true
LOG_LEVEL=INFO
EOF

echo "‚úÖ Configuration saved to .env.wazuh"

# Configuration file is ready - compose.yml already references it

echo "üöÄ Starting Wazuh MCP Server..."
echo

# Stop any existing containers
docker compose down --remove-orphans 2>/dev/null || true

# Build and start the service
docker compose up -d --build

echo
echo "‚è≥ Waiting for server to start..."
sleep 5

# Check if container is running
if docker compose ps --services --filter "status=running" | grep -q "wazuh-mcp-server"; then
    echo "‚úÖ Wazuh MCP Server is running!"
    echo
    echo "üåê Server Access:"
    echo "   HTTP/SSE Mode: http://localhost:$MCP_PORT"
    echo "   Health Check: http://localhost:$MCP_PORT/health"
    echo
    echo "üìã Useful Commands:"
    echo "   View logs:     docker compose logs -f"
    echo "   Stop server:   docker compose down"
    echo "   Restart:       docker compose restart"
    echo "   Test server:   docker compose exec wazuh-mcp-server python3 test-functionality.py"
    echo
    echo "üéâ Configuration complete! Your Wazuh MCP Server is ready."
else
    echo "‚ùå Server failed to start. Checking logs..."
    docker compose logs --tail=20
    echo
    echo "üí° Troubleshooting:"
    echo "   1. Check if Wazuh Manager is accessible from this machine"
    echo "   2. Verify your credentials are correct"
    echo "   3. Run: docker compose logs -f for detailed logs"
    exit 1
fi