#!/usr/bin/env python3
"""
Wazuh MCP Server - Production Entry Point
Single, robust FastMCP-powered MCP server for Wazuh SIEM integration.
Supports both stdio (local) and HTTP/SSE (remote) transports.

Usage:
  ./wazuh-mcp-server              # STDIO transport (default, for Claude Desktop)
  ./wazuh-mcp-server --stdio      # STDIO transport (explicit)
  ./wazuh-mcp-server --http       # HTTP/SSE transport (for remote access)
  ./wazuh-mcp-server --remote     # HTTP/SSE transport (alias)
  ./wazuh-mcp-server --server     # HTTP/SSE transport (alias)

Environment Variables:
  MCP_TRANSPORT=stdio|http        # Transport mode
  MCP_HOST=localhost              # HTTP server host
  MCP_PORT=3000                   # HTTP server port
"""

import sys
import os
from pathlib import Path

# Add the source directory to Python path
src_dir = Path(__file__).parent / "src"
sys.path.insert(0, str(src_dir))

# Check Python version early
if sys.version_info < (3, 10):
    print(f"ERROR: Python 3.10+ required. Current: {sys.version_info.major}.{sys.version_info.minor}")
    sys.exit(1)

# Parse command line arguments for transport mode
def parse_args():
    """Parse command line arguments to determine transport mode."""
    if len(sys.argv) > 1:
        arg = sys.argv[1].lower()
        if arg in ["--help", "-h"]:
            print(__doc__)
            sys.exit(0)
        elif arg in ["--http", "--server", "--remote"]:
            return "http"
        elif arg in ["--stdio", "--local"]:
            return "stdio"
        else:
            print(f"ERROR: Unknown argument '{sys.argv[1]}'")
            print("Use --help for usage information")
            sys.exit(1)
    return None  # Let server.py determine from environment

# Set transport mode if specified via command line
transport_mode = parse_args()
if transport_mode:
    os.environ["MCP_TRANSPORT"] = transport_mode

# Import and run the server
try:
    from wazuh_mcp_server.server import mcp, initialize_server
    import asyncio
    import uvicorn
    
    if __name__ == "__main__":
        # Initialize server components
        asyncio.run(initialize_server())
        
        # Display transport mode info and start server
        mode = os.getenv("MCP_TRANSPORT", "stdio").lower()
        if mode == "http":
            host = os.getenv("MCP_HOST", "0.0.0.0")
            port = int(os.getenv("MCP_PORT", "3000"))
            print(f"üåê Starting Wazuh MCP Server in HTTP/SSE mode on {host}:{port}")
            uvicorn.run(mcp.create_app(), host=host, port=port, log_level="info")
        else:
            print("üì± Starting Wazuh MCP Server in STDIO mode for Claude Desktop")
            mcp.run()
        
except ImportError as e:
    print(f"ERROR: Failed to import server module: {e}")
    print("Please ensure all dependencies are installed: pip install -r requirements.txt")
    sys.exit(1)
except Exception as e:
    print(f"CRITICAL ERROR: {e}")
    sys.exit(1)