# Redis Sentinel Configuration for Wazuh MCP Server HA
# This configuration enables automatic failover for Redis instances

# Basic settings
port 26379
sentinel announce-ip 127.0.0.1
sentinel announce-port 26379

# Working directory
dir /tmp

# Log level
loglevel notice

# Sentinel identification
sentinel myid $(cat /proc/sys/kernel/random/uuid | tr -d '-')

# Master configuration
# Format: sentinel monitor <master-name> <ip> <port> <quorum>
# Quorum: majority of sentinels (2 out of 3) needed to agree on failover
sentinel monitor wazuh-mcp-master redis-primary 6379 2

# Authentication
sentinel auth-pass wazuh-mcp-master ${REDIS_PASSWORD}

# Failover configuration
# Time in milliseconds before considering master as down
sentinel down-after-milliseconds wazuh-mcp-master 5000

# Maximum time for failover completion
sentinel failover-timeout wazuh-mcp-master 10000

# Number of replicas to reconfigure during failover
sentinel parallel-syncs wazuh-mcp-master 1

# Notification scripts (disabled for security)
# Script to execute when master changes
# sentinel notification-script wazuh-mcp-master /opt/scripts/notify-master-change.sh

# Script to execute during failover  
# sentinel client-reconfig-script wazuh-mcp-master /opt/scripts/reconfig-clients.sh

# Advanced settings
# Deny scripts execution for security
sentinel deny-scripts-reconfig yes

# Resolve hostnames
sentinel resolve-hostnames yes

# Announce hostnames instead of IPs
sentinel announce-hostnames no

# Security settings
# Require authentication for sentinel commands
requirepass ${REDIS_PASSWORD}

# ACL users (Redis 6.0+)
# user default on nopass ~* &* -@all +ping +sentinel +subscribe +unsubscribe +psubscribe +punsubscribe +publish +info +client +hello +auth

# Protected mode
protected-mode no

# Bind to all interfaces (container environment)
bind 0.0.0.0

# TCP keepalive
tcp-keepalive 60

# Logging
logfile ""
syslog-enabled no

# Performance tuning
# Disable saving to disk (sentinel state is ephemeral)
save ""

# Memory management
maxmemory 256mb
maxmemory-policy allkeys-lru

# Network
timeout 0
tcp-keepalive 300

# Slow log
slowlog-log-slower-than 10000
slowlog-max-len 128

# Latency monitoring
latency-monitor-threshold 100

# Client output buffer limits
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# Advanced sentinel configuration
# Notification thresholds (commented out for security)
# sentinel notification-script wazuh-mcp-master /usr/local/bin/notify.sh

# Custom notification script content (inline)
# #!/bin/bash
# EVENT_TYPE=$1
# MASTER_NAME=$2
# MASTER_IP=$3
# MASTER_PORT=$4
# 
# case $EVENT_TYPE in
#     "master-down")
#         echo "Master $MASTER_NAME is down!"
#         # Add alerting logic here
#         ;;
#     "master-failover-start")
#         echo "Starting failover for $MASTER_NAME"
#         # Add pre-failover logic here
#         ;;
#     "master-failover-end")
#         echo "Failover completed for $MASTER_NAME"
#         # Add post-failover logic here
#         ;;
# esac

# Reconfiguration script (commented out for security)
# sentinel client-reconfig-script wazuh-mcp-master /usr/local/bin/reconfig.sh

# Custom reconfiguration script content (inline)
# #!/bin/bash
# MASTER_NAME=$1
# ROLE=$2
# STATE=$3
# FROM_IP=$4
# FROM_PORT=$5
# TO_IP=$6
# TO_PORT=$7
# 
# if [ "$ROLE" = "master" ] && [ "$STATE" = "start" ]; then
#     echo "Reconfiguring clients for new master: $TO_IP:$TO_PORT"
#     # Add client reconfiguration logic here
#     # This could include updating load balancer configuration
#     # or notifying application instances of the new master
# fi

# Monitoring and alerting
# Enable info command for monitoring
# sentinel info-refresh-period 10000

# Connection settings
# Maximum number of clients
maxclients 1000

# TCP backlog
tcp-backlog 511

# Disable commands that could be dangerous
rename-command FLUSHDB ""
rename-command FLUSHALL ""
rename-command SHUTDOWN ""
rename-command DEBUG ""
rename-command EVAL ""
rename-command SCRIPT ""

# Enable keyspace notifications for monitoring
notify-keyspace-events Ex

# Replica configuration
# When a sentinel promotes a replica to master, it will also reconfigure
# the other replicas to point to the new master
replica-priority 100

# Minimum number of replicas for write operations
# min-replicas-to-write 1
# min-replicas-max-lag 10

# Security recommendations
# 1. Use strong passwords for REDIS_PASSWORD
# 2. Run sentinel in a secure network environment
# 3. Monitor sentinel logs for suspicious activity
# 4. Regularly rotate passwords
# 5. Use TLS for inter-node communication in production

# Backup and recovery
# Sentinel automatically handles master election and replica promotion
# Ensure regular backups of Redis data for disaster recovery
# Test failover procedures regularly

# Performance monitoring
# Monitor these metrics:
# - sentinel_masters
# - sentinel_replicas
# - sentinel_sentinels
# - failover_timeout
# - last_ping_sent
# - last_ok_ping_reply
# - last_ping_reply

# Troubleshooting
# Common issues and solutions:
# 1. Split brain: Ensure odd number of sentinels
# 2. Network partitions: Use proper quorum values
# 3. Slow failover: Tune down-after-milliseconds
# 4. False positives: Adjust down-after-milliseconds
# 5. Stuck failover: Check failover-timeout setting