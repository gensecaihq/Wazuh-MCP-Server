# Wazuh MCP Server - Docker Compose v2 Latest
# MCP-compliant remote server with production-grade configuration
# Uses Docker Compose v2 latest format with compose.yml naming convention

name: wazuh-mcp-server

services:
  wazuh-mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_DATE: ${BUILD_DATE}
        PYTHON_VERSION: ${PYTHON_VERSION:-3.13}
        VERSION: ${VERSION:-4.0.0}
      platforms:
        - linux/amd64
        - linux/arm64/v8
      target: production
    
    image: wazuh-mcp-server:${VERSION:-4.0.0}
    container_name: wazuh-mcp-server
    hostname: wazuh-mcp-server
    
    restart: unless-stopped
    init: true
    
    env_file: 
      - .env
    environment:
      # Runtime overrides
      MCP_HOST: 0.0.0.0
      MCP_PORT: 3000
      ENVIRONMENT: production
      
    ports:
      - "${MCP_PORT:-3000}:3000"
    
    # Modern health check with curl
    healthcheck:
      test: ["CMD", "curl", "-f", "--max-time", "5", "http://localhost:3000/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 45s
      
    # Resource management
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    
    # Security hardening
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    
    # Writable directories
    tmpfs:
      - /tmp:noexec,nosuid,size=64m
      - /app/logs:noexec,nosuid,size=128m
    
    # Structured logging
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=wazuh-mcp-server"
    
    # Service labels
    labels:
      - "com.docker.compose.service=wazuh-mcp-server"
      - "org.opencontainers.image.title=Wazuh MCP Server"
      - "org.opencontainers.image.description=MCP-compliant remote server for Wazuh SIEM"
      - "monitoring.prometheus.scrape=true"
      - "monitoring.prometheus.port=3000"
      - "monitoring.prometheus.path=/metrics"

# Network configuration
networks:
  default:
    name: wazuh-mcp-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
    driver_opts:
      com.docker.network.bridge.name: br-wazuh-mcp

# Persistent volumes (if needed)
volumes:
  wazuh-mcp-data:
    name: wazuh-mcp-data
    driver: local